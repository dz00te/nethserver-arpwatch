# -u <username> : defines with what user id arpwatch should run
# -e <email>    : the <email> where to send the reports
# -s <from>     : the <from>-address
{
#use strict;
use esmith::NetworksDB;
my $ndb = esmith::NetworksDB->open_ro();
my $db = esmith::ConfigDB->open or die "Couldn't open ConfigDB\n";
my $interfa = ${'arpwatch'}{'interface'};

my $bogonset='';
my $bogon = ${'arpwatch'}{'bogon'};

if ($bogon eq 'enabled') {
 $bogonset = '';
}
else {
 $bogonset = '-N';
}


### set prop interface on green net if interface is not populated

if ($interfa eq "") {
    foreach my $i ($ndb->green) {
        my $intx = $i->key;
        $interfa = $interfa . $intx . " ";
        if ($intx eq '') {
    	    $interfaces = $i;
	     } else {
        }    
    }
}


$db->set_prop('arpwatch', 'interface', $interfa);

my $mailset= ${'arpwatch'}{'email'};

#$OUT .= "OPTIONS=\" $bogonset -f /var/lib/arpwatch/arp.dat -u arpwatch -e $mailset -s 'arpwatch\@${'DomainName'}'\"\n";

$OUT .= "OPTIONS=\" $bogonset -u arpwatch -e $mailset -s 'arpwatch\@${'DomainName'}'\"\n";
$OUT .= "ARPWATCH_INTERFACE=\"$interfa\"\n";

#$OUT .= "OPTIONS=\"-i $interfa  $bogonset -f /var/lib/arpwatch/arp.dat -u arpwatch -e $mailset -s 'arpwatch\@${'DomainName'}'\"\n";
}


